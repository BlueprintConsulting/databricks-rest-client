/*
 * Jobs API 2.1
 * The Jobs API allows you to create, edit, and delete jobs.
 *
 * The version of the OpenAPI document: 2.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.edmunds.rest.databricks.DTO.jobs;

import com.edmunds.rest.databricks.DTO.DatabricksAssetDTO;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

import java.util.Objects;
import java.util.Optional;

/**
 * JobDTO
 */
@JsonPropertyOrder({
        JobDTO.JSON_PROPERTY_JOB_ID,
        JobDTO.JSON_PROPERTY_CREATOR_USER_NAME,
        JobDTO.JSON_PROPERTY_RUN_AS_USER_NAME,
        JobDTO.JSON_PROPERTY_SETTINGS,
        JobDTO.JSON_PROPERTY_CREATED_TIME
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaJerseyServerCodegen", date = "2022-03-09T23:53:34.566-08:00[America/Los_Angeles]")
public class JobDTO implements DatabricksAssetDTO {
    public static final String JSON_PROPERTY_JOB_ID = "job_id";
    public static final String JSON_PROPERTY_CREATOR_USER_NAME = "creator_user_name";
    public static final String JSON_PROPERTY_RUN_AS_USER_NAME = "run_as_user_name";
    public static final String JSON_PROPERTY_SETTINGS = "settings";
    public static final String JSON_PROPERTY_CREATED_TIME = "created_time";
    @JsonProperty(JSON_PROPERTY_JOB_ID)
    private Long jobId;
    @JsonProperty(JSON_PROPERTY_CREATOR_USER_NAME)
    private String creatorUserName;
    @JsonProperty(JSON_PROPERTY_RUN_AS_USER_NAME)
    private String runAsUserName;
    @JsonProperty(JSON_PROPERTY_SETTINGS)
    private JobSettingsDTO settings;
    @JsonProperty(JSON_PROPERTY_CREATED_TIME)
    private Long createdTime;

    public JobDTO jobId(Long jobId) {
        this.jobId = jobId;
        return this;
    }

    /**
     * The canonical identifier for this job.
     *
     * @return jobId
     **/
    @JsonProperty(value = "job_id")
    public Long getJobId() {
        return jobId;
    }

    public void setJobId(Long jobId) {
        this.jobId = jobId;
    }

    public JobDTO creatorUserName(String creatorUserName) {
        this.creatorUserName = creatorUserName;
        return this;
    }

    /**
     * The creator user name. This field wonâ€™t be included in the response if the user has already been deleted.
     *
     * @return creatorUserName
     **/
    @JsonProperty(value = "creator_user_name")
    public String getCreatorUserName() {
        return creatorUserName;
    }

    public void setCreatorUserName(String creatorUserName) {
        this.creatorUserName = creatorUserName;
    }

    public JobDTO runAsUserName(String runAsUserName) {
        this.runAsUserName = runAsUserName;
        return this;
    }

    /**
     * The user name that the job runs as. &#x60;run_as_user_name&#x60; is based on the current job settings, and is set to the creator of the job if job access control is disabled, or the &#x60;is_owner&#x60; permission if job access control is enabled.
     *
     * @return runAsUserName
     **/
    @JsonProperty(value = "run_as_user_name")
    public String getRunAsUserName() {
        return runAsUserName;
    }

    public void setRunAsUserName(String runAsUserName) {
        this.runAsUserName = runAsUserName;
    }

    public JobDTO settings(JobSettingsDTO settings) {
        this.settings = settings;
        return this;
    }

    /**
     * Get settings
     *
     * @return settings
     **/
    @JsonProperty(value = "settings")
    public JobSettingsDTO getSettings() {
        return settings;
    }

    public void setSettings(JobSettingsDTO settings) {
        this.settings = settings;
    }

    public JobDTO createdTime(Long createdTime) {
        this.createdTime = createdTime;
        return this;
    }

    /**
     * The time at which this job was created in epoch milliseconds (milliseconds since 1/1/1970 UTC).
     *
     * @return createdTime
     **/
    @JsonProperty(value = "created_time")
    public Long getCreatedTime() {
        return createdTime;
    }

    public void setCreatedTime(Long createdTime) {
        this.createdTime = createdTime;
    }


    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        JobDTO job = (JobDTO) o;
        return Objects.equals(this.jobId, job.jobId) &&
                Objects.equals(this.creatorUserName, job.creatorUserName) &&
                Objects.equals(this.runAsUserName, job.runAsUserName) &&
                Objects.equals(this.settings, job.settings) &&
                Objects.equals(this.createdTime, job.createdTime);
    }

    @Override
    public int hashCode() {
        return Objects.hash(jobId, creatorUserName, runAsUserName, settings, createdTime);
    }


    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class JobDTO {\n");

        sb.append("    jobId: ").append(toIndentedString(jobId)).append("\n");
        sb.append("    creatorUserName: ").append(toIndentedString(creatorUserName)).append("\n");
        sb.append("    runAsUserName: ").append(toIndentedString(runAsUserName)).append("\n");
        sb.append("    settings: ").append(toIndentedString(settings)).append("\n");
        sb.append("    createdTime: ").append(toIndentedString(createdTime)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

    @Override
    public String getId() {
        return jobId.toString();
    }

    @Override
    public String getName() {
        if (settings == null) {
            return jobId.toString();
        } else {
            return Optional.of(settings.getName()).orElse(jobId.toString());
        }
    }
}

