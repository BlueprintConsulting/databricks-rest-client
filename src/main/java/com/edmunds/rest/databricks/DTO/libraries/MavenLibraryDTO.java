/*
 * Jobs API 2.1
 * The Jobs API allows you to create, edit, and delete jobs.
 *
 * The version of the OpenAPI document: 2.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.edmunds.rest.databricks.DTO.libraries;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/**
 * MavenLibraryDTO
 */
@JsonPropertyOrder({
  MavenLibraryDTO.JSON_PROPERTY_COORDINATES,
  MavenLibraryDTO.JSON_PROPERTY_REPO,
  MavenLibraryDTO.JSON_PROPERTY_EXCLUSIONS
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaJerseyServerCodegen", date = "2022-03-10T00:34:34.435-08:00[America/Los_Angeles]")
public class MavenLibraryDTO {
  public static final String JSON_PROPERTY_COORDINATES = "coordinates";
  @JsonProperty(JSON_PROPERTY_COORDINATES)
  private String coordinates;

  public static final String JSON_PROPERTY_REPO = "repo";
  @JsonProperty(JSON_PROPERTY_REPO)
  private String repo;

  public static final String JSON_PROPERTY_EXCLUSIONS = "exclusions";
  @JsonProperty(JSON_PROPERTY_EXCLUSIONS)
  private List<String> exclusions = null;

  public MavenLibraryDTO coordinates(String coordinates) {
    this.coordinates = coordinates;
    return this;
  }

  /**
   * Gradle-style Maven coordinates. For example: &#x60;org.jsoup:jsoup:1.7.2&#x60;. This field is required.
   * @return coordinates
   **/
  @JsonProperty(value = "coordinates")

  public String getCoordinates() {
    return coordinates;
  }

  public void setCoordinates(String coordinates) {
    this.coordinates = coordinates;
  }

  public MavenLibraryDTO repo(String repo) {
    this.repo = repo;
    return this;
  }

  /**
   * Maven repo to install the Maven package from. If omitted, both Maven Central Repository and Spark Packages are searched.
   * @return repo
   **/
  @JsonProperty(value = "repo")
  public String getRepo() {
    return repo;
  }

  public void setRepo(String repo) {
    this.repo = repo;
  }

  public MavenLibraryDTO exclusions(List<String> exclusions) {
    this.exclusions = exclusions;
    return this;
  }

  public MavenLibraryDTO addExclusionsItem(String exclusionsItem) {
    if (this.exclusions == null) {
      this.exclusions = new ArrayList<String>();
    }
    this.exclusions.add(exclusionsItem);
    return this;
  }

  /**
   * List of dependences to exclude. For example: &#x60;[\&quot;slf4j:slf4j\&quot;, \&quot;*:hadoop-client\&quot;]&#x60;.  Maven dependency exclusions: &lt;https://maven.apache.org/guides/introduction/introduction-to-optional-and-excludes-dependencies.html&gt;.
   * @return exclusions
   **/
  @JsonProperty(value = "exclusions")
  public List<String> getExclusions() {
    return exclusions;
  }

  public void setExclusions(List<String> exclusions) {
    this.exclusions = exclusions;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MavenLibraryDTO mavenLibrary = (MavenLibraryDTO) o;
    return Objects.equals(this.coordinates, mavenLibrary.coordinates) &&
        Objects.equals(this.repo, mavenLibrary.repo) &&
        Objects.equals(this.exclusions, mavenLibrary.exclusions);
  }

  @Override
  public int hashCode() {
    return Objects.hash(coordinates, repo, exclusions);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MavenLibraryDTO {\n");
    
    sb.append("    coordinates: ").append(toIndentedString(coordinates)).append("\n");
    sb.append("    repo: ").append(toIndentedString(repo)).append("\n");
    sb.append("    exclusions: ").append(toIndentedString(exclusions)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

