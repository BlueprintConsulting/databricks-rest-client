/*
 * Jobs API 2.1
 * The Jobs API allows you to create, edit, and delete jobs.
 *
 * The version of the OpenAPI document: 2.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.edmunds.rest.databricks.DTO.jobs;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonValue;

import java.util.Objects;

/**
 * CronScheduleDTO
 */
@JsonPropertyOrder({
  CronScheduleDTO.JSON_PROPERTY_QUARTZ_CRON_EXPRESSION,
  CronScheduleDTO.JSON_PROPERTY_TIMEZONE_ID,
  CronScheduleDTO.JSON_PROPERTY_PAUSE_STATUS
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaJerseyServerCodegen", date = "2022-03-10T00:39:06.873-08:00[America/Los_Angeles]")
public class CronScheduleDTO {
  public static final String JSON_PROPERTY_QUARTZ_CRON_EXPRESSION = "quartz_cron_expression";
  @JsonProperty(JSON_PROPERTY_QUARTZ_CRON_EXPRESSION)
  private String quartzCronExpression;

  public static final String JSON_PROPERTY_TIMEZONE_ID = "timezone_id";
  @JsonProperty(JSON_PROPERTY_TIMEZONE_ID)
  private String timezoneId;

  /**
   * Indicate whether this schedule is paused or not.
   */
  public enum PauseStatusEnum {
    PAUSED("PAUSED"),
    
    UNPAUSED("UNPAUSED");

    private String value;

    PauseStatusEnum(String value) {
      this.value = value;
    }

    @Override
    @JsonValue
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static PauseStatusEnum fromValue(String value) {
      for (PauseStatusEnum b : PauseStatusEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_PAUSE_STATUS = "pause_status";
  @JsonProperty(JSON_PROPERTY_PAUSE_STATUS)
  private PauseStatusEnum pauseStatus;

  public CronScheduleDTO quartzCronExpression(String quartzCronExpression) {
    this.quartzCronExpression = quartzCronExpression;
    return this;
  }

  /**
   * A Cron expression using Quartz syntax that describes the schedule for a job. See [Cron Trigger](http://www.quartz-scheduler.org/documentation/quartz-2.3.0/tutorials/crontrigger.html) for details. This field is required.
   * @return quartzCronExpression
   **/
  @JsonProperty(value = "quartz_cron_expression")
  public String getQuartzCronExpression() {
    return quartzCronExpression;
  }

  public void setQuartzCronExpression(String quartzCronExpression) {
    this.quartzCronExpression = quartzCronExpression;
  }

  public CronScheduleDTO timezoneId(String timezoneId) {
    this.timezoneId = timezoneId;
    return this;
  }

  /**
   * A Java timezone ID. The schedule for a job is resolved with respect to this timezone. See [Java TimeZone](https://docs.oracle.com/javase/7/docs/api/java/util/TimeZone.html) for details. This field is required.
   * @return timezoneId
   **/
  @JsonProperty(value = "timezone_id")
  public String getTimezoneId() {
    return timezoneId;
  }

  public void setTimezoneId(String timezoneId) {
    this.timezoneId = timezoneId;
  }

  public CronScheduleDTO pauseStatus(PauseStatusEnum pauseStatus) {
    this.pauseStatus = pauseStatus;
    return this;
  }

  /**
   * Indicate whether this schedule is paused or not.
   * @return pauseStatus
   **/
  @JsonProperty(value = "pause_status")
  public PauseStatusEnum getPauseStatus() {
    return pauseStatus;
  }

  public void setPauseStatus(PauseStatusEnum pauseStatus) {
    this.pauseStatus = pauseStatus;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CronScheduleDTO cronSchedule = (CronScheduleDTO) o;
    return Objects.equals(this.quartzCronExpression, cronSchedule.quartzCronExpression) &&
        Objects.equals(this.timezoneId, cronSchedule.timezoneId) &&
        Objects.equals(this.pauseStatus, cronSchedule.pauseStatus);
  }

  @Override
  public int hashCode() {
    return Objects.hash(quartzCronExpression, timezoneId, pauseStatus);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CronScheduleDTO {\n");
    
    sb.append("    quartzCronExpression: ").append(toIndentedString(quartzCronExpression)).append("\n");
    sb.append("    timezoneId: ").append(toIndentedString(timezoneId)).append("\n");
    sb.append("    pauseStatus: ").append(toIndentedString(pauseStatus)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

